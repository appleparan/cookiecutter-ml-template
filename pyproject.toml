[project]
name = "cookiecutter-ml-template"   # Change this
version = "0.1.0"   # Change this
description = "Cookiecutter template for a Python package" # Change this
readme = "README.rst"
license = {file="LICENSE"}
authors = [
    {name="Jongsu Liam Kim", email="jongsukim8@gmail.com"}
]
dependencies = [
    "numpy",
    "matplotlib",
    "pandas[parquet,performance]",
    "plotly",
    "scikit-learn",
    "tqdm",
]
requires-python = ">=3.10, <4.0"
keywords = [
    "cookiecutter",
    "template",
    "package",
    "machine learning"
] # Change this
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Software Development :: Libraries :: Python Modules"
]

[project.optional-dependencies]
dev = [
    "black",
    "build",
    "cookiecutter>=1.4.0",
    "coverage",
    "coverage-badge",
    "mypy",
    "mypy-extensions",
    "myst-parser",
    "ruff",
    "pydata-sphinx-theme",
    "pytest",
    "pytest-cookies",
    "pre-commit",
    "safety",
    "sphinx",
    "sphinxcontrib-youtube",
    "tox>=4.0",
    "twine",
    "watchdog",
]

[build-system]
requires = ["setuptools >= 67.0", "wheel"]
build-backend = "setuptools.build_meta"

# [project.scripts]
# template-cli = "template.cli" # Change this

[tool.setuptools]
packages = ["template"] # Change this

[tool.black]
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'
color = true
extend-exclude = '''
/(
  # The following are specific to Black, you probably don't want those.
  \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | env
  | venv
  | tests/data
)/
'''

# pyproject.toml
[tool.pytest.ini_options]
minversion = "6.0"
testpaths = [
    "tests",
]
# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
# Directories that are not visited by pytest collector:
norecursedirs = [
    "hooks",
    "*.egg",
    ".eggs",
    "dist",
    "build",
    "docs",
    ".tox",
    ".git",
    "__pycache__"
]
python_files = "tests/*"
log_cli = "true"
markers = [
    "slow"
]
doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL"]

addopts = [
    "--strict-markers",
    "--tb=short",
    "--doctest-modules",
    "--doctest-continue-on-failure",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::UserWarning",
]

[tool.mypy]
# https://mypy.readthedocs.io/en/latest/config_file.html#using-a-pyproject-toml-file
python_version = 3.9
plugins = "numpy.typing.mypy_plugin"
pretty = true
show_traceback = true
color_output = true

allow_redefinition = false
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
ignore_missing_imports = true
implicit_reexport = false
no_implicit_optional = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.coverage.run]
source = ["tests"]
branch = true

[tool.coverage.report]
fail_under = 50
show_missing = true

[tool.ruff]
include = ["*.py", "*.pyi", "**/pyproject.toml", "*.ipynb"]
exclude = [
    "git",
    "__pycache__",
    "data/*",
    "notebooks/*",
    "logs/*",
    "**/__pycache__",
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "docs",
    "data",
]
ignore = [
    "B017",
    "C408",
    "C901",
    "E501",
    "E741",
    "F401",
    "F403",
    "F811",
    "F841",
]
select = [
    "ARG",  # flake8-unused-arguments
    "B",
    "B9",
    "C",
    "COM",  # flake8-commas
    "D",    # pydocstyle
    "DTZ",  # flake8-datetimez
    "E",    # pycodestyle
    "EM",   # flake8-errmsg
    "F",    # pyflakes
    "FBT",  # flake8-boolean-trap
    "G",    # flake8-logging-format
    "ISC",  # flake8-implicit-str-concat
    "N",    # pep8-naming
    "NPY",  # NumPy-specific rules
    "PD",   # pandas-vet
    "PT",   # flake8-pytest-style
    "PTH",  # flake8-use-pathlib
    "RUF",  # Ruff-specific rules
    "S",    # flake8-bandit
    "SIM",  # flake8-simplify
    "TID",  # flake8-tidy-imports
    "UP",   # pyupgrade
    "W",    # pycodestyle
]
# Same as Black.
line-length = 88
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
# Assume Python 3.10.
target-version = "py310"

[tool.ruff.mccabe]
max-complexity = 18

[tool.ruff.per-file-ignores]
"**/configs/**.py" = [
    "F401",
    "E402",
]
"**/__init__.py" = [
    "F401",
    "F403",
    "E402",
]
"**/tests/config/**.py" = [
    "F401",
    "E402",
]
"**/tests/**.py" = [
    "D100",
    "D103",
    "D104",
    "S101",
]
"configs/**.py" = [
    "F401",
    "E402",
]
"tests/config/**.py" = [
    "F401",
    "E402",
]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.isort]
known-third-party = ["numpy", "scipy", "pandas", "matplotlib", "sklearn", "tensorflow", "tqdm"]
# sections = ["FUTURE", "TYPING", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

[tool.tox]
legacy_tox_ini = """
    [tox]
    min_version = 4.0
    envlist =
        py310
        py311
        py312
        docs
    skipsdist = true

    [testenv]
    setenv =
        PYTHONPATH = {toxinidir}
    deps =
        pytest
        -r{toxinidir}/requirements-dev.txt
    commands =
        python -m pip install --upgrade pip
        pytest tests

    [testenv:docs]
    basepython=python
    changedir=docs
    deps=sphinx
    commands=
        sphinx-build -b html -d {envtmpdir}/doctrees . {envtmpdir}/html
"""
